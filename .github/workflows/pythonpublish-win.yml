name: Python packages Windows

on:
  release:
    types: [published]
  push:

jobs:
  build:
    runs-on: windows-2019
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    name: Python ${{ matrix.python-version }}
    steps:
      - uses: jeandet/setup-fortran@expose_g++
        id: setup-fortran
        with:
          compiler: gcc
          version: 12
      - uses: actions/checkout@v3
      - name: Build python wheel
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: |
          pip install --upgrade twine build ninja wheel meson numpy meson-python
          python scripts/build_wheel.py
        env:
          FC: ${{ steps.setup-fortran.outputs.fc }}
          CC: ${{ steps.setup-fortran.outputs.cc }}
          CXX: ${{ steps.setup-fortran.outputs.cxx }}
      - name: Save packages as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: py_tsyganenko-windows-${{ matrix.python-version }}
          path: dist/*
      - name: Publish on PyPi
        if: github.event.release
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload --skip-existing dist/*
      - name: Publish on PyPi (test)
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PASSWORD }}
        run: twine upload --repository testpypi --skip-existing dist/*.whl
